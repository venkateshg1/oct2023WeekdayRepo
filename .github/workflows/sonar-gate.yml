name: CI Pipeline

on: [push, pull_request]

jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'

    - name: Cache SonarQube packages
      uses: actions/cache@v2
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar-${{ hashFiles('**/*.java') }}
        restore-keys: |
          ${{ runner.os }}-sonar-

    - name: Install SonarQube Scanner
      run: |
        curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
        unzip sonar-scanner-cli.zip
        mv sonar-scanner-4.6.2.2472-linux sonar-scanner

    - name: Run SonarQube scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: |
        sonar-scanner/bin/sonar-scanner \
          -Dsonar.projectKey=my-Java-web-app \
          -Dsonar.organization=my_organization \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    - name: SonarQube Quality Gate Check
      id: quality_gate
      uses: sonarsource/sonarcloud-github-action@master
      with:
        projectKey: my-Java-web-app
        organization: my_organization
        scannerMode: sonar-scanner
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: sonar
    if: ${{ steps.quality_gate.outputs.quality_gate == 'OK' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Build
      run: npm run build

  notify:
    runs-on: ubuntu-latest
    needs: sonar
    if: ${{ steps.quality_gate.outputs.quality_gate != 'OK' }}
    steps:
    - name: Notify developers
      run: |
        echo "SonarQube quality gate failed. Please check the logs."
        curl -X POST -H 'Content-type: application/json' --data '{"text":"SonarQube quality gate failed. Please check the logs."}'
